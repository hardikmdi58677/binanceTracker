{"version":3,"sources":["actions/index.js","App.js","reducers/cryptoReducer.js","reducers/index.js","index.js"],"names":["fillCryptoTable","url","cryptoSymbol","tableNumber","dispatch","a","axios","get","response","type","payload","data","tableNo","console","log","message","connect","useDispatch","cryptoList","useSelector","state","crypto","cryptoList1","url1Data","map","key","symbol","text","value","cryptoList2","url2Data","useState","monitor","setMonitor","url1","setUrl1","url2","setUrl2","getData","useCallback","response1","response2","fetchData","displayData1","table1Data","crypto1","Table","Row","Cell","bidPrice","askPrice","displayData2","table2Data","crypto2","useEffect","updateInterval","setInterval","tab1Response","i","length","res","push","tab2Response","updateAllData","clearInterval","Container","Form","Field","placeholder","onChange","e","target","Button","onClick","inverted","color","Group","widths","Select","fluid","search","label","options","celled","Header","HeaderCell","Body","style","margin","displayData3","initialState","cryptoReducer","action","tableKey","find","concat","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4995432.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchData = (url1, url2) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response1 = await axios.get(`${url1}`);\r\n      const response2 = await axios.get(url2);\r\n      dispatch({\r\n        type: \"FETCH_DATA\",\r\n        payload: {\r\n          response1: response1.data,\r\n          response2: response2.data,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.log(\"Error message : \", err.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fillCryptoTable = (url, cryptoSymbol, tableNumber) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(`${url}?symbol=${cryptoSymbol}`);\r\n      dispatch({\r\n        type: \"UPDATE_CRYPTO_PRICE\",\r\n        payload: {\r\n          data: response.data,\r\n          tableNo: tableNumber,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.log(\"Error message\", err.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAllData = (url1, url2, cryptoList) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let tab1Response = [];\r\n\r\n      for (let i = 0; i < cryptoList.table1Data.length; i++) {\r\n        let res = await axios.get(\r\n          `${url1}?symbol=${cryptoList.table1Data[i].symbol}`\r\n        );\r\n        tab1Response.push(res.data);\r\n      }\r\n\r\n      let tab2Response = [];\r\n      for (let i = 0; i < cryptoList.table2Data.length; i++) {\r\n        let res = await axios.get(\r\n          `${url2}?symbol=${cryptoList.table2Data[i].symbol}`\r\n        );\r\n        tab2Response.push(res.data);\r\n      }\r\n\r\n      dispatch({\r\n        type: \"UPDATE_DATA\",\r\n        payload: {\r\n          tab1Response,\r\n          tab2Response,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.log(\"Error message\", err.message);\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState, Fragment, useCallback } from \"react\";\nimport \"./App.css\";\nimport { Container, Form, Button, Table } from \"semantic-ui-react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { fetchData, fillCryptoTable, updateAllData } from \"./actions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const cryptoList = useSelector((state) => state.crypto);\n  const cryptoList1 =\n    cryptoList && cryptoList.url1Data\n      ? cryptoList.url1Data.map((crypto) => ({\n          key: crypto.symbol,\n          text: crypto.symbol,\n          value: crypto.symbol,\n        }))\n      : [];\n\n  const cryptoList2 =\n    cryptoList && cryptoList.url2Data\n      ? cryptoList.url2Data.map((crypto) => ({\n          key: crypto.symbol,\n          text: crypto.symbol,\n          value: crypto.symbol,\n        }))\n      : [];\n\n  const [monitor, setMonitor] = useState(false);\n\n  const [url1, setUrl1] = useState(\"\");\n  const [url2, setUrl2] = useState(\"\");\n  const getData = useCallback(\n    (url1, url2) => {\n      if (url1 && url2) {\n        dispatch(fetchData(url1, url2));\n      }\n    },\n    [dispatch]\n  );\n  const displayData1 = useCallback(() => {\n    if (cryptoList.table1Data) {\n      return cryptoList.table1Data.map((crypto1) => {\n        return (\n          <Table.Row key={crypto1.symbol}>\n            <Table.Cell>{crypto1.symbol}</Table.Cell>\n            <Table.Cell>{crypto1.bidPrice}</Table.Cell>\n            <Table.Cell>{crypto1.askPrice}</Table.Cell>\n          </Table.Row>\n        );\n      });\n    }\n  }, [cryptoList]);\n\n  const displayData2 = useCallback(() => {\n    if (cryptoList.table2Data) {\n      return cryptoList.table2Data.map((crypto2) => {\n        return (\n          <Table.Row key={crypto2.symbol}>\n            <Table.Cell>{crypto2.symbol}</Table.Cell>\n            <Table.Cell>{crypto2.bidPrice}</Table.Cell>\n            <Table.Cell>{crypto2.askPrice}</Table.Cell>\n          </Table.Row>\n        );\n      });\n    }\n  }, [cryptoList]);\n\n  const displayData3 = () => {\n    let minKey = null;\n    if (cryptoList.table1Data && cryptoList.table2Data) {\n      if (cryptoList.table1Data.length >= cryptoList.table2Data.length) {\n        minKey = cryptoList.table2Data;\n      } else {\n        minKey = cryptoList.table1Data;\n      }\n      return minKey.map((crypto, i) => {\n        return (\n          <Table.Row key={crypto.symbol}>\n            <Table.Cell>\n              {((crypto.askPrice - cryptoList.table2Data[i].bidPrice) * 100) /\n                crypto.askPrice}\n            </Table.Cell>\n            <Table.Cell>\n              {((crypto.bidPrice - cryptoList.table2Data[i].askPrice) * 100) /\n                crypto.bidPrice}\n            </Table.Cell>\n          </Table.Row>\n        );\n      });\n    }\n  };\n\n  useEffect(() => {\n    let updateInterval = null;\n    if (monitor) {\n      updateInterval = setInterval(() => {\n        dispatch(updateAllData(url1, url2, cryptoList));\n      }, 500);\n    }\n    return () => clearInterval(updateInterval);\n  }, [cryptoList, dispatch, monitor, url1, url2]);\n\n  return (\n    <Container>\n      <Form>\n        <Form.Field>\n          <label>Link 1</label>\n          <input\n            placeholder=\"Link 1\"\n            value={url1}\n            onChange={(e) => setUrl1(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Link 2</label>\n          <input\n            placeholder=\"Link 2\"\n            value={url2}\n            onChange={(e) => setUrl2(e.target.value)}\n          />\n        </Form.Field>\n        <Button onClick={() => getData(url1, url2)}>Fetch data</Button>\n\n        <Button\n          inverted\n          color={monitor ? \"green\" : \"red\"}\n          onClick={() => setMonitor(!monitor)}\n        >{`Monitor :${monitor ? \"ON\" : \"OFF\"}`}</Button>\n\n        {url1 && url2 && (\n          <Fragment>\n            <Form.Group widths=\"equal\">\n              <Form.Select\n                fluid\n                search\n                label=\"crypto 1\"\n                options={cryptoList1}\n                onChange={(e, data) => {\n                  dispatch(fillCryptoTable(url1, data.value, 1));\n                }}\n                placeholder=\"crypto 1\"\n              />\n              <Form.Select\n                fluid\n                search\n                label=\"crypto 2\"\n                options={cryptoList2}\n                placeholder=\"crypto 2\"\n                onChange={(e, data) => {\n                  dispatch(fillCryptoTable(url2, data.value, 2));\n                }}\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Table celled>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Symbol</Table.HeaderCell>\n                    <Table.HeaderCell>Bid Price</Table.HeaderCell>\n                    <Table.HeaderCell>Ask Price</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>{displayData1()}</Table.Body>\n              </Table>\n              <Table celled style={{ margin: 0 }}>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Symbol</Table.HeaderCell>\n                    <Table.HeaderCell>Bid Price</Table.HeaderCell>\n                    <Table.HeaderCell>Ask Price</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>{displayData2()}</Table.Body>\n              </Table>\n              <Table celled style={{ margin: 0 }}>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>A_B Diff %</Table.HeaderCell>\n                    <Table.HeaderCell>B_A Diff %</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                {displayData3()}\n              </Table>\n            </Form.Group>\n          </Fragment>\n        )}\n      </Form>\n    </Container>\n  );\n}\n\nexport default connect()(App);\n","const initialState = {\r\n  url1Data: [],\r\n  url2Data: [],\r\n  table1Data: [],\r\n  table2Data: [],\r\n};\r\n\r\nconst cryptoReducer = (state = initialState, action) => {\r\n  const { payload } = action;\r\n  switch (action.type) {\r\n    case \"FETCH_DATA\": {\r\n      const url1Data = payload.response1;\r\n      const url2Data = payload.response2;\r\n      return {\r\n        url1Data,\r\n        url2Data,\r\n      };\r\n    }\r\n\r\n    case \"UPDATE_CRYPTO_PRICE\": {\r\n      const tableKey = `table${payload.tableNo}Data`;\r\n      return {\r\n        ...state,\r\n        [tableKey]: state[tableKey]\r\n          ? state[tableKey].find((crypto) => {\r\n              return crypto.symbol === payload.data.symbol;\r\n            })\r\n            ? state[tableKey].map((crypto) => {\r\n                if (crypto.symbol === payload.data.symbol) {\r\n                  return payload.data;\r\n                }\r\n                return crypto;\r\n              })\r\n            : [...state[tableKey], payload.data]\r\n          : [].concat(payload.data),\r\n      };\r\n    }\r\n\r\n    case \"UPDATE_DATA\": {\r\n      return {\r\n        ...state,\r\n        table1Data: payload.tab1Response,\r\n        table2Data: payload.tab2Response,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cryptoReducer;\r\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\"\r\nimport cryptoReducer from \"./cryptoReducer\"\r\nimport thunk from \"redux-thunk\"\r\n\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(combineReducers({\r\n    crypto: cryptoReducer,\r\n}), composeEnhancer(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from 'react-redux'\nimport store from \"./reducers\"\n\nReactDOM.render(\n   <Provider store={store}>\n     <App />\n   </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}